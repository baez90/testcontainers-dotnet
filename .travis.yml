language: csharp

solution: testcontainers-dotnet.sln

mono: none
dotnet: 2.1.502

install:
  - dotnet restore
  - dotnet tool install --global dotnet-sonarscanner

before_script:
  - export PATH="$PATH:$HOME/.dotnet/tools"
  
script:
  - dotnet sonarscanner begin /k:"testcontainers-dotnet" /o:"isen-ng-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="2457b2d28e2da7ba84edcf68b53e9650217c5b44"
  - dotnet build
  - dotnet sonarscanner end /d:sonar.login="2457b2d28e2da7ba84edcf68b53e9650217c5b44"
  - dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat='json%2copencover' /p:CoverletOutput=../bin/coverage/ /p:MergeWith='../bin/coverage/coverage.json'
    
after_success:
  - curl -s https://codecov.io/bash > codecov
  - chmod +x codecov
  - ./codecov -f "test/bin/coverage/coverage.opencover.xml"

deploy:
  - provider: script
    skip_cleanup: true
    script: dotnet pack -c Release
    on:
      tags: true
      condition: $TRAVIS_TAG =~ ^release/*$
  - provider: script
    skip_cleanup: true
    script: dotnet pack -c Release
    on:
      tags: true
      condition: $TRAVIS_TAG =~ ^test/*$

cache:
  directories:
    - '$HOME/.nuget/packages'
    - '$HOME/.local/share/NuGet/Cache'
    - '$HOME/.sonar/cache'